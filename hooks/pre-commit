#!/bin/bash
set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Get the root directory of the git repository
GIT_ROOT=$(git rev-parse --show-toplevel)
cd "$GIT_ROOT"

echo "üöÄ Running pre-commit checks..."

# Store exit codes to report all failures at once
FAILED=0
FAILURE_MESSAGES=()

# Function to run a check and capture failures
run_check() {
    local check_name="$1"
    local check_command="$2"

    echo -e "\nüîç ${check_name}..."

    if eval "$check_command"; then
        echo -e "${GREEN}‚úÖ ${check_name} passed${NC}"
    else
        FAILED=1
        FAILURE_MESSAGES+=("${check_name}")
        echo -e "${RED}‚ùå ${check_name} failed${NC}"
    fi
}

# Check for v3 TypeScript changes (packages/ or services/)
STAGED_V3_TS_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '^(packages|services)/.*\.(ts|tsx)$' || true)

# Check for v2 JavaScript changes (tzurot-legacy/)
STAGED_V2_JS_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '^tzurot-legacy/.*\.(js|jsx)$' || true)

# V3 TypeScript checks
if [ -n "$STAGED_V3_TS_FILES" ]; then
    echo -e "\nüì¶ V3 TypeScript changes detected"
    run_check "TypeScript build verification" "./scripts/verify-build.sh"
fi

# V2 JavaScript checks (legacy)
if [ -n "$STAGED_V2_JS_FILES" ]; then
    echo -e "\nüîß V2 JavaScript changes detected (tzurot-legacy/)"

    # Check for test anti-patterns (only on staged test files)
    STAGED_TEST_FILES=$(echo "$STAGED_V2_JS_FILES" | grep -E '\.test\.js$' || true)
    if [ -n "$STAGED_TEST_FILES" ]; then
        run_check "Test anti-patterns check" "echo \"$STAGED_TEST_FILES\" | xargs node tzurot-legacy/scripts/check-test-antipatterns.js"
    fi

    # Check for timer patterns
    run_check "Timer patterns check" "node tzurot-legacy/scripts/check-timer-patterns.js --staged"

    # Run linting on staged files
    run_check "ESLint (v2)" "echo \"$STAGED_V2_JS_FILES\" | xargs npx eslint"

    # Run tests for changed test files
    if [ -n "$STAGED_TEST_FILES" ]; then
        run_check "Tests for changed files" "echo \"$STAGED_TEST_FILES\" | xargs npx jest --passWithNoTests --bail"
    fi

    echo -e "\n${YELLOW}üí° Tip: Consider running 'cd tzurot-legacy && npm test' for full test coverage${NC}"
fi

# If no relevant files changed
if [ -z "$STAGED_V3_TS_FILES" ] && [ -z "$STAGED_V2_JS_FILES" ]; then
    echo "No TypeScript or JavaScript files staged for commit, skipping checks..."
fi

# Report results
if [ $FAILED -eq 1 ]; then
    echo -e "\n${RED}‚ùå Pre-commit failed! The following checks failed:${NC}"
    for msg in "${FAILURE_MESSAGES[@]}"; do
        echo -e "${RED}  - $msg${NC}"
    done
    echo -e "\n${YELLOW}To bypass hooks (not recommended): git commit --no-verify${NC}"
    exit 1
fi

echo -e "\n${GREEN}‚úÖ All pre-commit checks passed!${NC}"
