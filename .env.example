# Tzurot v3 Environment Configuration

# ============================================
# Discord Configuration
# ============================================
# Toggle between DEV and PRODUCTION by commenting/uncommenting the appropriate section

# --- DEVELOPMENT BOT ---
DISCORD_TOKEN=your_dev_bot_token_here
DISCORD_CLIENT_ID=your_dev_client_id
GUILD_ID=your_test_guild_id  # For guild-specific dev command deployment
AUTO_DEPLOY_COMMANDS=false  # Set to 'true' to auto-deploy commands on bot startup

# --- PRODUCTION BOT (comment out dev section above and uncomment this section) ---
# DISCORD_TOKEN=your_production_bot_token_here
# DISCORD_CLIENT_ID=your_production_client_id
# GUILD_ID=  # Leave empty for global command deployment
# AUTO_DEPLOY_COMMANDS=true  # Auto-deploy commands on startup

BOT_OWNER_ID=your_discord_user_id  # Your personal Discord user ID for admin commands

# ============================================
# Service URLs (for local development)
# ============================================
API_GATEWAY_URL=http://localhost:3000
AI_WORKER_URL=http://localhost:3001

# ============================================
# Redis Configuration
# ============================================
REDIS_HOST=localhost
REDIS_PORT=6379
# REDIS_PASSWORD=  # Optional
# Or use REDIS_URL for Railway deployment:
# REDIS_URL=redis://default:password@host:port

# ============================================
# Qdrant Vector Database Configuration
# ============================================
# For Local Development:
QDRANT_URL=http://localhost:6333

# For Railway/Production (Qdrant Cloud):
# QDRANT_URL=https://your-cluster.qdrant.io
# QDRANT_API_KEY=your_qdrant_api_key

# ============================================
# AI Provider Configuration
# ============================================

# Which AI provider to use (openrouter or gemini)
AI_PROVIDER=openrouter

# OpenRouter (for LLM completions via OpenRouter)
OPENROUTER_API_KEY=your_openrouter_api_key

# Gemini (alternative AI provider)
GEMINI_API_KEY=your_gemini_api_key

# OpenAI (for embeddings only)
OPENAI_API_KEY=your_openai_api_key

# Model Configuration
# Note: These defaults are also defined in packages/common-types/src/modelDefaults.ts
DEFAULT_AI_MODEL=anthropic/claude-haiku-4.5  # Main generation model
WHISPER_MODEL=whisper-1  # For voice transcription
VISION_FALLBACK_MODEL=qwen/qwen3-vl-235b-a22b-instruct  # For image analysis fallback
EMBEDDING_MODEL=text-embedding-3-small  # For RAG memory

# Optional: ElevenLabs for voice synthesis
# ELEVENLABS_API_KEY=your_elevenlabs_api_key

# ============================================
# Database Configuration (PostgreSQL)
# ============================================
# For Local Development:
DATABASE_URL=postgresql://tzurot:tzurot_dev_password@localhost:5432/tzurot

# For Railway Deployment:
# Railway provides two connection URLs - use the appropriate one:
#
# 1. Private Network (recommended for services running on Railway):
#    - Faster (no proxy overhead)
#    - No network egress charges
#    - Only works within Railway infrastructure
#    DATABASE_URL=${{Postgres.DATABASE_URL}}
#
# 2. Public TCP Proxy (for external access from IDE/local machine):
#    - Access from anywhere
#    - SSL/TLS encrypted
#    - Network egress charges apply
#    DATABASE_URL=${{Postgres.DATABASE_PUBLIC_URL}}
#
# Security Note: TCP Proxy is safe for development databases
# - SSL/TLS encryption enabled by default
# - Strong password authentication required
# - Same security model as AWS RDS, GCP Cloud SQL
# See docs/deployment/RAILWAY_SHARED_VARIABLES.md for details

# For /admin db-sync command - both database URLs needed for bidirectional sync:
# DEV_DATABASE_URL=postgresql://user:pass@dev-host:port/railway
# PROD_DATABASE_URL=postgresql://user:pass@prod-host:port/railway

# ============================================
# Worker Configuration
# ============================================
WORKER_CONCURRENCY=5
QUEUE_NAME=ai-requests

# ============================================
# Application Configuration
# ============================================
NODE_ENV=development
LOG_LEVEL=info

# Health check server
ENABLE_HEALTH_SERVER=true
PORT=3001  # ai-worker port

# ============================================
# Feature Flags
# ============================================
# Note: Memory (RAG with Qdrant) is always enabled if Qdrant is configured.
# If Qdrant fails to connect, the system continues without long-term memory.
# Future: User-level or personality-level memory controls will be added to the database.

ENABLE_FREE_WILL=false  # LangGraph orchestrator (not yet implemented)

# ============================================
# Security
# ============================================
# Encryption key for BYOK credentials (generate with: openssl rand -hex 32)
ENCRYPTION_KEY=your_32_byte_hex_encryption_key_here

# ============================================
# Railway Deployment
# ============================================
# Railway sets these automatically:
# RAILWAY_ENVIRONMENT=development
# RAILWAY_PROJECT_ID=your-project-id
# RAILWAY_SERVICE_NAME=ai-worker|api-gateway|bot-client

# Railway automatically provides these from addons:
# REDIS_URL=redis://default:password@redis.railway.internal:6379
# DATABASE_URL=${{Postgres.DATABASE_URL}}  # Private network (recommended for services)
# DATABASE_PUBLIC_URL=${{Postgres.DATABASE_PUBLIC_URL}}  # TCP proxy (for external access)

# For service-to-service communication within Railway, use .railway.internal:
# API_GATEWAY_URL=http://api-gateway.railway.internal:3000

# Note: QDRANT_URL should point to your Qdrant Cloud instance, not Railway internal
