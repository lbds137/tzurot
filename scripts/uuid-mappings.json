{
  "description": "Maps old shapes.inc user UUIDs to current Postgres user UUIDs",
  "mappings": {
    "82ea754e-c3fb-467a-8662-8bc30791b4fe": {
      "newUserId": "80bf4fc1-a240-53d3-bae7-43d6ed3e5bae",
      "username": "fennarin",
      "note": "Snail â†’ Fennarin (name change)",
      "oldMemories": 46,
      "newMemories": 18,
      "discoveredVia": "keyword search for 'snail' in first-person memories"
    }
  },
  "instructions": [
    "Add mappings here as you discover old shapes.inc UUIDs",
    "Format: { 'old-uuid': { newUserId: 'current-uuid', username: 'current-username', note: 'context', discoveredVia: 'method' } }",
    "The migration script will consolidate all memories under the newUserId"
  ],
  "tools": {
    "find-user-memories.cjs": "Search memories by keyword to identify UUID owners",
    "analyze-senders-for-uuid-mapping.cjs": "Find co-occurrence patterns in group conversations",
    "analyze-qdrant-users.cjs": "List all Qdrant userIds vs Postgres users"
  },
  "workflow": [
    "1. Run analyze-senders-for-uuid-mapping.cjs to find orphaned UUIDs that co-occur with known users",
    "2. Use find-user-memories.cjs to search for identifying keywords in memories",
    "3. Confirm identity via first-person narrative and username mentions",
    "4. Add mapping to this file with discoveredVia documentation",
    "5. Migration script will apply mappings automatically"
  ],
  "known_issues": [
    "TODO: Find Lila's old shapes.inc UUID (search for 'lbds' or 'lila' keywords)",
    "TODO: Find Nevae/Lambda's old shapes.inc UUID (search for 'nevae' or 'lambda' keywords)",
    "89 orphaned UUIDs from shapes.inc imports that need investigation"
  ]
}
